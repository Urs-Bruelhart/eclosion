#!/bin/sh

# Mount dataset manually rather than use zfs mount -a
# ref: somewhere at https://github.com/zfsonlinux/zfs/blob/master/contrib/initramfs/scripts/zfs

# Get a ZFS filesystem property value.
get_fs_value() {
  fs="$1"
  value=$2
  zfs get -H -ovalue "$value" "$fs" 2> /dev/null
}

mount_fs() {
  fs=$1

  # Skip canmount=off
  if [ "$fs" != "$BOOTFS" ] ; then
    canmount=$(get_fs_value "$fs" canmount)
    [ "$canmount" = "off" ] && return 0
  fi

  # get original mountpoint
  mountpoint=$(get_fs_value "$fs" mountpoint)
  if [ "$mountpoint" = "legacy" ] || [ "$mountpoint" = "none" ] ; then
    mountpoint=$(get_fs_value "$fs" org.zol:mountpoint)
    if [ "$mountpoint" = "legacy" ] || [ "$mountpoint" = "none" ] || [ "$mountpoint" = "-" ] ; then
      if [ "$fs" != "$BOOTFS" ] ; then
        return 0
      else
        mountpoint=""
      fi
    fi

    if [ "$mountpoint" = "legacy" ] ; then
      zfs_cmd="mount -t zfs"
    else
      zfs_cmd="mount -o zfsutil -t zfs"
    fi

  else
    zfs_cmd="mount -o zfsutil -t zfs"
  fi

  zfs_stderr=$($zfs_cmd "$fs" "$mountpoint" 2>&1)
  zfs_error=$?
  if [ $zfs_error -eq 0 ] ; then
    return 0
  else
    rescueShell "Failed to mount $fs at $mountpoint, $zfs_stderr"
  fi
}

# Go through the complete list (recursively) of all filesystems below
# the real root dataset
filesystems=$(zfs list -oname -tfilesystem -H -r "$RPOOL")
if [ -n "$filesystems" ] ; then
  for fs in $filesystems ; do
    mount_fs "$fs"
  done
else
  rescueShell "Failed to get datasets, try: zfs mount -a && exit"
fi
